template(name="SyslogForwarderTemplate" type="list") {
  constant(value=" ")
  constant(value="bar")
  constant(value=" ")
  constant(value="foo")
  constant(value=" ")
  constant(value="uid")
  constant(value=" ")
  property(name="hostname")
  constant(value=" ")
  property(name="pri")
  constant(value=" ")
  property(name="syslogtag")
  constant(value=" ")
  property(name="timestamp" dateFormat="rfc3339")
  constant(value=" ")
  property(name="procid")
  constant(value=" ")
  property(name="msgid")
  constant(value=" ")
  property(name="msg")
  constant(value=" ")
}

module(
  load="omrelp"
  tls.tlslib="openssl"
)

module(load="omprog")
module(
  load="impstats"
  interval="60"
  format="json"
  resetCounters="off"
  ruleset="process_stats"
  bracketing="on"
)

ruleset(name="process_stats") {
  action(
    type="omprog"
    name="to_pstats_processor"
    binary="/var/lib/rsyslog-relp-configurator/process-rsyslog-pstats.sh"
  )
}

ruleset(name="relp_action_ruleset") {
  action(
    type="omrelp"
    target="localhost"
    port="10250"
    Template="SyslogForwarderTemplate"
    tls="on"
    tls.caCert="/var/lib/rsyslog-relp-configurator/tls/ca.crt"
    tls.myCert="/var/lib/rsyslog-relp-configurator/tls/tls.crt"
    tls.myPrivKey="/var/lib/rsyslog-relp-configurator/tls/tls.key"
    tls.authmode="name"
    tls.permittedpeer=["rsyslog-server.foo","rsyslog-server.foo.bar"]
  )
}

if $programname == ["systemd","audisp-syslog"] and $syslogseverity <= 5 then {
  call relp_action_ruleset
  stop
}
if $programname == ["kubelet"] and $syslogseverity <= 7 then {
  call relp_action_ruleset
  stop
}
if $syslogseverity <= 2 then {
  call relp_action_ruleset
  stop
}

input(type="imuxsock" Socket="/run/systemd/journal/syslog")